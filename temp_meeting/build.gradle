plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"					// QueryDSL 
	id 'java'
	id 'war'
}

group = 'com.eyeson'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://plugins.gradle.org/m2/" } // 플러그인 저장소
}

dependencies {
//	Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'			// Spring WEB
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'			// Spring JDBC
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'		// Spring data JDBC
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'		// Spring data JPA
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'	// Spring data MongoDB
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'	// Spring data Redis
//	implementation 'org.springframework.boot:spring-boot-starter-security'		// Spring Security
	compile("org.springframework.boot:spring-boot-starter-websocket")			// Spring Websocket

//	Library
	compileOnly 'org.projectlombok:lombok'										// 	lombok
	annotationProcessor 'org.projectlombok:lombok'								// 	lombok
	runtimeOnly 'mysql:mysql-connector-java'									// 	MySQL Connection
	runtimeOnly 'org.postgresql:postgresql'										// 	PostgreSQL Connection
	compile 'io.springfox:springfox-swagger2:2.9.2'								//  Swagger	2
	compile 'io.springfox:springfox-swagger-ui:2.9.2'							// 	Swagger-ui
//	compile("com.querydsl:querydsl-core:4.2.1")
	compile("com.querydsl:querydsl-apt:4.2.1")
  	compile("com.querydsl:querydsl-jpa:4.2.1")
//	compile("com.querydsl:querydsl-collections:4.2.1")
	
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'		// 	Spring tomcat
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

}

test {
	useJUnitPlatform()
}
def querydslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}